{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this;\n\nimport cloudinary from 'cloudinary';\nimport 'fs';\ncloudinary.config({\n  cloud_name: process.env.CLOUD_NAME,\n  api_key: process.env.CLOUD_KEY,\n  api_secret: process.env.CLOUD_SECRET\n}); // handler create image\n\nvar CreateImage = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(image) {\n    var addImage;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _this.data = false;\n            _context.next = 3;\n            return cloudinary.v2.uploader.upload(image);\n\n          case 3:\n            addImage = _context.sent;\n\n            if (addImage) {\n              _this.data = addImage;\n            } else {\n              console.error(addImage);\n            }\n\n            return _context.abrupt(\"return\", _this.data);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function CreateImage(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n_c = CreateImage;\nexport default CreateImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateImage\");","map":{"version":3,"sources":["/home/naza/Escritorio/marketblets/front-end/components/management/cloudinary.component.js"],"names":["cloudinary","config","cloud_name","process","env","CLOUD_NAME","api_key","CLOUD_KEY","api_secret","CLOUD_SECRET","CreateImage","image","data","v2","uploader","upload","addImage","console","error"],"mappings":";;;;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,IAAP;AAEAA,UAAU,CAACC,MAAX,CAAkB;AACdC,EAAAA,UAAU,EAAEC,OAAO,CAACC,GAAR,CAAYC,UADV;AAEdC,EAAAA,OAAO,EAAEH,OAAO,CAACC,GAAR,CAAYG,SAFP;AAGdC,EAAAA,UAAU,EAAEL,OAAO,CAACC,GAAR,CAAYK;AAHV,CAAlB,E,CAMA;;AACA,IAAMC,WAAW;AAAA,sEAAG,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAChB,YAAA,KAAI,CAACC,IAAL,GAAY,KAAZ;AADgB;AAAA,mBAEOZ,UAAU,CAACa,EAAX,CAAcC,QAAd,CAAuBC,MAAvB,CAA8BJ,KAA9B,CAFP;;AAAA;AAEVK,YAAAA,QAFU;;AAGhB,gBAAGA,QAAH,EAAY;AACR,cAAA,KAAI,CAACJ,IAAL,GAAYI,QAAZ;AACH,aAFD,MAEK;AACDC,cAAAA,OAAO,CAACC,KAAR,CAAcF,QAAd;AACH;;AAPe,6CAQT,KAAI,CAACJ,IARI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXF,WAAW;AAAA;AAAA;AAAA,GAAjB;;KAAMA,W;AAWN,eAAeA,WAAf","sourcesContent":["import cloudinary from 'cloudinary';\nimport 'fs'\n\ncloudinary.config({ \n    cloud_name: process.env.CLOUD_NAME, \n    api_key: process.env.CLOUD_KEY, \n    api_secret: process.env.CLOUD_SECRET\n  });\n\n// handler create image\nconst CreateImage = async image => {\n    this.data = false;\n    const addImage = await cloudinary.v2.uploader.upload(image);\n    if(addImage){\n        this.data = addImage;\n    }else{\n        console.error(addImage)\n    }\n    return this.data;\n}\n\nexport default CreateImage;"]},"metadata":{},"sourceType":"module"}