{"ast":null,"code":"var _jsxFileName = \"/home/naza/Escritorio/marketblets/front-end/components/management/sell/sells.pending.component.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useCookies } from 'react-cookie';\nimport ColSell from './col.sells.pending.component';\n\nconst SellsPending = e => {\n  const {\n    0: transactionFind,\n    1: setTransactionFind\n  } = useState([]);\n  const {\n    0: product,\n    1: setProduct\n  } = useState([]);\n  const [cookies, setCookies] = useCookies(['user']);\n  useEffect(() => {\n    if (cookies.user && cookies.user.rol !== 'seller') {\n      Router.push('/');\n    } else if (!cookies.user) {\n      Router.push('/');\n    }\n\n    const handlerFetch = async () => {\n      const getFetch = await fetch('http://localhost:4000/v1/product/transaction/sells', {\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      const resFetch = await getFetch.json();\n      setTransactionFind(resFetch);\n    };\n\n    const getAllProduct = async id => {\n      const fetchAll = await fetch(`http://localhost:4000/v1/product/${id}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      const dataFetch = await fetchAll.json();\n      setProduct(dataFetch);\n    };\n\n    handlerFetch();\n    getAllProduct(transactionFind.transaction.id_product);\n  }, [e]);\n  return __jsx(React.Fragment, null, transactionFind.status == 200 ? transactionFind.transaction.map((data, i) => __jsx(ColSell, {\n    dataOrder: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 60\n    }\n  })) : __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, \"No hay transacciones disponibles\"));\n};\n\nexport default SellsPending;","map":{"version":3,"sources":["/home/naza/Escritorio/marketblets/front-end/components/management/sell/sells.pending.component.jsx"],"names":["useState","useEffect","useCookies","ColSell","SellsPending","e","transactionFind","setTransactionFind","product","setProduct","cookies","setCookies","user","rol","Router","push","handlerFetch","getFetch","fetch","headers","resFetch","json","getAllProduct","id","fetchAll","dataFetch","transaction","id_product","status","map","data","i"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,OAAP,MAAoB,+BAApB;;AAEA,MAAMC,YAAY,GAAGC,CAAC,IAAI;AACtB,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAwCP,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM;AAAA,OAACQ,OAAD;AAAA,OAAUC;AAAV,MAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBT,UAAU,CAAC,CAAC,MAAD,CAAD,CAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGS,OAAO,CAACE,IAAR,IACIF,OAAO,CAACE,IAAR,CAAaC,GAAb,KAAqB,QAD5B,EACqC;AACjCC,MAAAA,MAAM,CAACC,IAAP,CAAY,GAAZ;AACH,KAHD,MAGM,IAAG,CAACL,OAAO,CAACE,IAAZ,EAAiB;AACnBE,MAAAA,MAAM,CAACC,IAAP,CAAY,GAAZ;AACH;;AACD,UAAMC,YAAY,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oDAAD,EAAuD;AAC/EC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,yCAA+B;AAF1B;AADsE,OAAvD,CAA5B;AAMA,YAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAvB;AACAd,MAAAA,kBAAkB,CAACa,QAAD,CAAlB;AACH,KATD;;AAUA,UAAME,aAAa,GAAG,MAAMC,EAAN,IAAY;AAC9B,YAAMC,QAAQ,GAAG,MAAMN,KAAK,CAAE,oCAAmCK,EAAG,EAAxC,EAA2C;AACnEJ,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,yCAA+B;AAF1B;AAD0D,OAA3C,CAA5B;AAMA,YAAMM,SAAS,GAAG,MAAMD,QAAQ,CAACH,IAAT,EAAxB;AACAZ,MAAAA,UAAU,CAACgB,SAAD,CAAV;AACH,KATD;;AAUAT,IAAAA,YAAY;AACZM,IAAAA,aAAa,CAAChB,eAAe,CAACoB,WAAhB,CAA4BC,UAA7B,CAAb;AACH,GA7BQ,EA6BN,CAACtB,CAAD,CA7BM,CAAT;AA8BA,SACI,4BAEIC,eAAe,CAACsB,MAAhB,IAA0B,GAA1B,GACEtB,eAAe,CAACoB,WAAhB,CAA4BG,GAA5B,CAAgC,CAACC,IAAD,EAAOC,CAAP,KAAa,MAAC,OAAD;AAAS,IAAA,SAAS,EAAED,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7C,CADF,GAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAJN,CADJ;AASH,CA3CD;;AA6CA,eAAe1B,YAAf","sourcesContent":["import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useCookies } from 'react-cookie';\nimport ColSell from './col.sells.pending.component';\n\nconst SellsPending = e => {\n    const [transactionFind, setTransactionFind] = useState([]);\n    const [product, setProduct] = useState([]);\n    const [cookies, setCookies] = useCookies(['user']);\n    useEffect(() => {\n        if(cookies.user \n            && cookies.user.rol !== 'seller'){\n            Router.push('/')\n        }else if(!cookies.user){\n            Router.push('/')\n        }\n        const handlerFetch = async () => {\n            const getFetch = await fetch('http://localhost:4000/v1/product/transaction/sells', {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*'\n                }\n            });\n            const resFetch = await getFetch.json();\n            setTransactionFind(resFetch);\n        }\n        const getAllProduct = async id => {\n            const fetchAll = await fetch(`http://localhost:4000/v1/product/${id}`, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*'\n                }\n            })\n            const dataFetch = await fetchAll.json();\n            setProduct(dataFetch);\n        }\n        handlerFetch();\n        getAllProduct(transactionFind.transaction.id_product)\n    }, [e])\n    return(\n        <>\n        {\n            transactionFind.status == 200 \n            ? transactionFind.transaction.map((data, i) => <ColSell dataOrder={data}/>) \n            : <p>No hay transacciones disponibles</p> \n        }\n        </>\n    )\n}\n\nexport default SellsPending;"]},"metadata":{},"sourceType":"module"}