{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/naza/Escritorio/private/marketblets/front-end/components/management/sell/sells.pending.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useCookies } from 'react-cookie';\nimport ColSell from './col.sells.pending.component';\n\nvar SellsPending = function SellsPending(e) {\n  _s();\n\n  var _useState = useState([]),\n      transactionFind = _useState[0],\n      setTransactionFind = _useState[1];\n\n  var _useCookies = useCookies(['user']),\n      _useCookies2 = _slicedToArray(_useCookies, 2),\n      cookies = _useCookies2[0],\n      setCookies = _useCookies2[1];\n\n  var Router = useRouter();\n  useEffect(function () {\n    if (cookies.user && cookies.user.rol !== 'seller') {\n      Router.push('/');\n    } else if (!cookies.user) {\n      Router.push('/');\n    }\n\n    var handlerFetch = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var getFetch, resFetch;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(process.env.API_PATH, \"/v1/product/transaction/sells\"), {\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*'\n                  }\n                });\n\n              case 2:\n                getFetch = _context.sent;\n                _context.next = 5;\n                return getFetch.json();\n\n              case 5:\n                resFetch = _context.sent;\n                console.log(resFetch);\n                setTransactionFind(resFetch);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function handlerFetch() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    handlerFetch();\n  }, [e]);\n  return __jsx(React.Fragment, null, transactionFind.status == 200 && transactionFind.transaction_mp && transactionFind.transaction_mp.results ? transactionFind.transaction_mp.results.map(function (data, i) {\n    return __jsx(ColSell, {\n      name: data.collector.first_name ? data.collector.first_name : 'An贸nimo',\n      surname: data.collector.last_name ? data.collector.last_name : 'An贸nimo',\n      amount: data.transaction_amount,\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    });\n  }) : __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, \"No hay transacciones disponibles\"));\n};\n\n_s(SellsPending, \"oxWzN739fw/dzuI0ggjIha/tqYA=\", false, function () {\n  return [useCookies, useRouter];\n});\n\n_c = SellsPending;\nexport default SellsPending;\n\nvar _c;\n\n$RefreshReg$(_c, \"SellsPending\");","map":{"version":3,"sources":["/home/naza/Escritorio/private/marketblets/front-end/components/management/sell/sells.pending.component.jsx"],"names":["useRouter","useState","useEffect","useCookies","ColSell","SellsPending","e","transactionFind","setTransactionFind","cookies","setCookies","Router","user","rol","push","handlerFetch","fetch","process","env","API_PATH","headers","getFetch","json","resFetch","console","log","status","transaction_mp","results","map","data","i","collector","first_name","last_name","transaction_amount"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,OAAP,MAAoB,+BAApB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC,EAAI;AAAA;;AAAA,kBACwBL,QAAQ,CAAC,EAAD,CADhC;AAAA,MACfM,eADe;AAAA,MACEC,kBADF;;AAAA,oBAEQL,UAAU,CAAC,CAAC,MAAD,CAAD,CAFlB;AAAA;AAAA,MAEfM,OAFe;AAAA,MAENC,UAFM;;AAGtB,MAAMC,MAAM,GAAGX,SAAS,EAAxB;AACAE,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGO,OAAO,CAACG,IAAR,IACIH,OAAO,CAACG,IAAR,CAAaC,GAAb,KAAqB,QAD5B,EACqC;AACjCF,MAAAA,MAAM,CAACG,IAAP,CAAY,GAAZ;AACH,KAHD,MAGM,IAAG,CAACL,OAAO,CAACG,IAAZ,EAAiB;AACnBD,MAAAA,MAAM,CAACG,IAAP,CAAY,GAAZ;AACH;;AACD,QAAMC,YAAY;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACMC,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,QAAhB,oCAAyD;AACjFC,kBAAAA,OAAO,EAAE;AACL,oCAAgB,kBADX;AAEL,mDAA+B;AAF1B;AADwE,iBAAzD,CADX;;AAAA;AACXC,gBAAAA,QADW;AAAA;AAAA,uBAOMA,QAAQ,CAACC,IAAT,EAPN;;AAAA;AAOXC,gBAAAA,QAPW;AAQjBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAf,gBAAAA,kBAAkB,CAACe,QAAD,CAAlB;;AATiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAZR,YAAY;AAAA;AAAA;AAAA,OAAlB;;AAWAA,IAAAA,YAAY;AACf,GAnBQ,EAmBN,CAACT,CAAD,CAnBM,CAAT;AAoBA,SACI,4BAEIC,eAAe,CAACmB,MAAhB,IAA0B,GAA1B,IACGnB,eAAe,CAACoB,cADnB,IAEGpB,eAAe,CAACoB,cAAhB,CAA+BC,OAFlC,GAGErB,eAAe,CAACoB,cAAhB,CAA+BC,OAA/B,CAAuCC,GAAvC,CAA2C,UAACC,IAAD,EAAOC,CAAP;AAAA,WACzC,MAAC,OAAD;AACI,MAAA,IAAI,EAAED,IAAI,CAACE,SAAL,CAAeC,UAAf,GAA4BH,IAAI,CAACE,SAAL,CAAeC,UAA3C,GAAwD,SADlE;AAEI,MAAA,OAAO,EAAEH,IAAI,CAACE,SAAL,CAAeE,SAAf,GAA2BJ,IAAI,CAACE,SAAL,CAAeE,SAA1C,GAAsD,SAFnE;AAGI,MAAA,MAAM,EAAEJ,IAAI,CAACK,kBAHjB;AAII,MAAA,GAAG,EAAEJ,CAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADyC;AAAA,GAA3C,CAHF,GAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAbN,CADJ;AAkBH,CA1CD;;GAAM1B,Y;UAE4BF,U,EACfH,S;;;KAHbK,Y;AA4CN,eAAeA,YAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useCookies } from 'react-cookie';\nimport ColSell from './col.sells.pending.component';\n\nconst SellsPending = e => {\n    const [transactionFind, setTransactionFind] = useState([]);\n    const [cookies, setCookies] = useCookies(['user']);\n    const Router = useRouter();\n    useEffect(() => {\n        if(cookies.user \n            && cookies.user.rol !== 'seller'){\n            Router.push('/')\n        }else if(!cookies.user){\n            Router.push('/')\n        }\n        const handlerFetch = async () => {\n            const getFetch = await fetch(`${process.env.API_PATH}/v1/product/transaction/sells`, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*'\n                }\n            });\n            const resFetch = await getFetch.json();\n            console.log(resFetch)\n            setTransactionFind(resFetch);\n        }\n        handlerFetch();\n    }, [e])\n    return(\n        <>\n        {\n            transactionFind.status == 200 \n            && transactionFind.transaction_mp\n            && transactionFind.transaction_mp.results \n            ? transactionFind.transaction_mp.results.map((data, i) => (\n                <ColSell \n                    name={data.collector.first_name ? data.collector.first_name : 'An贸nimo'}\n                    surname={data.collector.last_name ? data.collector.last_name : 'An贸nimo'}\n                    amount={data.transaction_amount} \n                    key={i}\n                />\n            )) \n            : <p>No hay transacciones disponibles</p> \n        }\n        </>\n    )\n}\n\nexport default SellsPending;"]},"metadata":{},"sourceType":"module"}