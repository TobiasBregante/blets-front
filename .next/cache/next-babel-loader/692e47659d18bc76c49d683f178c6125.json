{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\developer\\\\blets\\\\components\\\\management\\\\show.metrics.component.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nconst ShowMetrics = prop => {\n  const {\n    0: transactionMetrics,\n    1: setTransactionMetrics\n  } = useState([]);\n  const {\n    0: register,\n    1: setRegister\n  } = useState([]);\n  const {\n    0: reff,\n    1: setReff\n  } = useState([]);\n  const {\n    0: product,\n    1: setProduct\n  } = useState([]);\n  const {\n    0: influencer,\n    1: setInfluencer\n  } = useState([]);\n  useEffect(() => {\n    const handlerFetchMetrics = async () => {\n      // fetch metrics\n      const getFetchMetrics = await fetch(`${process.env.API_PATH}/v1/product/transaction/sells/metrics`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      const resFetchMetrics = await getFetchMetrics.json();\n      setTransactionMetrics(resFetchMetrics);\n    };\n\n    handlerFetchMetrics();\n  }, [prop]);\n  return __jsx(React.Fragment, null, __jsx(\"article\", {\n    className: \"content-metrics-header-mybusiness col-12 col-sm-12 col-lg-12 col-xl-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"Ventas: \", __jsx(\"span\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 29\n    }\n  }, transactionMetrics.success)), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"Registros: \", __jsx(\"span\", {\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 32\n    }\n  }, transactionMetrics.users)), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Referidos: \", __jsx(\"span\", {\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 32\n    }\n  }, transactionMetrics.reff)), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Productos y servicios: \", __jsx(\"span\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 44\n    }\n  }, transactionMetrics.products)), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"Influencers: \", __jsx(\"span\", {\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 34\n    }\n  }, transactionMetrics.influencers)), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Admins. finanzas: \", __jsx(\"span\", {\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 39\n    }\n  }, transactionMetrics.sells)))));\n};\n\nexport default ShowMetrics;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/developer/blets/components/management/show.metrics.component.jsx"],"names":["useState","useEffect","ShowMetrics","prop","transactionMetrics","setTransactionMetrics","register","setRegister","reff","setReff","product","setProduct","influencer","setInfluencer","handlerFetchMetrics","getFetchMetrics","fetch","process","env","API_PATH","headers","resFetchMetrics","json","success","users","products","influencers","sells"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAGA,MAAMC,WAAW,GAAGC,IAAI,IAAI;AACxB,QAAM;AAAA,OAACC,kBAAD;AAAA,OAAqBC;AAArB,MAA8CL,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM;AAAA,OAACM,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACQ,IAAD;AAAA,OAAOC;AAAP,MAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACU,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACY,UAAD;AAAA,OAAaC;AAAb,MAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,mBAAmB,GAAG,YAAY;AACpC;AACA,YAAMC,eAAe,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,QAAS,uCAAzB,EAAiE;AAChGC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,yCAA+B;AAF1B;AADuF,OAAjE,CAAnC;AAMA,YAAMC,eAAe,GAAG,MAAMN,eAAe,CAACO,IAAhB,EAA9B;AACAjB,MAAAA,qBAAqB,CAACgB,eAAD,CAArB;AACH,KAVD;;AAWAP,IAAAA,mBAAmB;AACtB,GAbQ,EAaN,CAACX,IAAD,CAbM,CAAT;AAcA,SACI,4BACA;AAAS,IAAA,SAAS,EAAC,wEAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACY;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCC,kBAAkB,CAACmB,OAAnD,CADZ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACe;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCnB,kBAAkB,CAACoB,KAArD,CADf,CAJJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACe;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCpB,kBAAkB,CAACI,IAArD,CADf,CAPJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAC2B;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCJ,kBAAkB,CAACqB,QAAnD,CAD3B,CAVJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACiB;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCrB,kBAAkB,CAACsB,WAArD,CADjB,CAbJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACsB;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCtB,kBAAkB,CAACuB,KAArD,CADtB,CAhBJ,CADJ,CADA,CADJ;AA0BH,CA/CD;;AAiDA,eAAezB,WAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nconst ShowMetrics = prop => {\r\n    const [transactionMetrics, setTransactionMetrics] = useState([]);\r\n    const [register, setRegister] = useState([])\r\n    const [reff, setReff] = useState([])\r\n    const [product, setProduct] = useState([])\r\n    const [influencer, setInfluencer] = useState([])\r\n\r\n    useEffect(() => {\r\n        const handlerFetchMetrics = async () => {\r\n            // fetch metrics\r\n            const getFetchMetrics = await fetch(`${process.env.API_PATH}/v1/product/transaction/sells/metrics`, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*'\r\n                }\r\n            });\r\n            const resFetchMetrics = await getFetchMetrics.json();\r\n            setTransactionMetrics(resFetchMetrics);\r\n        }\r\n        handlerFetchMetrics();\r\n    }, [prop]);\r\n    return(\r\n        <>\r\n        <article className=\"content-metrics-header-mybusiness col-12 col-sm-12 col-lg-12 col-xl-12\">\r\n            <ul>\r\n                <li>\r\n                    Ventas: <span className='text-primary'>{transactionMetrics.success}</span>\r\n                </li>\r\n                <li>\r\n                    Registros: <span className='text-secondary'>{transactionMetrics.users}</span>\r\n                </li>\r\n                <li>\r\n                    Referidos: <span className='text-secondary'>{transactionMetrics.reff}</span>\r\n                </li>\r\n                <li>\r\n                    Productos y servicios: <span className='text-primary'>{transactionMetrics.products}</span>\r\n                </li>\r\n                <li>\r\n                    Influencers: <span className='text-secondary'>{transactionMetrics.influencers}</span>\r\n                </li>\r\n                <li>\r\n                    Admins. finanzas: <span className='text-secondary'>{transactionMetrics.sells}</span>\r\n                </li>\r\n            </ul>    \r\n        </article>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ShowMetrics;"]},"metadata":{},"sourceType":"module"}