{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport { useEffect, useRef, useState } from \"react\";\n\nconst Register = () => {\n  // get value inputs of form login\n  const {\n    0: user,\n    1: setUser\n  } = useState('');\n  const {\n    0: pdw,\n    1: setPdw\n  } = useState('');\n  const {\n    0: userEmail,\n    1: setEmail\n  } = useState('');\n  const {\n    0: geoData,\n    1: setGeoData\n  } = useState([]);\n  const {\n    0: fullname,\n    1: setFullname\n  } = useState('');\n  const {\n    0: location,\n    1: setLocation\n  } = useState('');\n  const userWarningNull = useRef(null);\n  const userWarning = useRef(null);\n  const userSuccess = useRef(null); // switch for view or not pdw when write\n\n  const {\n    0: viewPdw,\n    1: setViewPdw\n  } = useState('password');\n  const {\n    0: viewPdwClose,\n    1: setViewPdwClose\n  } = useState('d-none');\n  const {\n    0: viewPdwOpen,\n    1: setViewPdwOpen\n  } = useState('d-block'); // array list of South AmÃ©rica provinces, Argentina\n\n  useEffect(() => {\n    const geoDataFetch = async () => {//const geo = await fetch('https://apis.datos.gob.ar/georef/api/provincias');\n      //const geoJSON = await geo.json();\n      //setGeoData(geoJSON.provincias)\n    };\n\n    geoDataFetch();\n  }, []); // handler of view pdw or not\n\n  const handlePdwView = () => {\n    if (viewPdwClose === 'd-none') {\n      setViewPdwClose('d-block');\n      setViewPdwOpen('d-none');\n      setViewPdw('text');\n    } else {\n      setViewPdwClose('d-none');\n      setViewPdwOpen('d-block');\n      setViewPdw('password');\n    }\n  }; // data since user create\n\n\n  const valueDate = new Date();\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  }; // handler of the start session of the login\n\n  const userSessionStart = async (username, userPdw) => {\n    let statusDataUser = true;\n    const dataVerifyUser = [username, fullname, location || 'Agregar localidad', userPdw, userEmail];\n    dataVerifyUser.forEach(element => {\n      if (element === '') return statusDataUser = false;\n    });\n\n    if (statusDataUser) {\n      const res = await fetch(`${process.env.API_PATH}/v1/user/signup`, {\n        body: JSON.stringify({\n          since_create: valueDate.toLocaleDateString(\"es-AR\", options),\n          username: username,\n          fullname: fullname,\n          location: location || 'Agregar localidad',\n          pdw: userPdw,\n          email: userEmail\n        }),\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      const datares = await res.json();\n\n      if (!datares.create_user) {\n        userWarning.current.classList.toggle('d-block');\n        setTimeout(() => {\n          userWarning.current.classList.toggle('d-block');\n        }, 2500);\n      } else {\n        userSuccess.current.classList.toggle('d-block');\n        setTimeout(() => {\n          userSuccess.current.classList.toggle('d-block');\n          window.location = '/iniciar-sesion';\n        }, 2500);\n      }\n    } else {\n      userWarningNull.current.classList.toggle('d-block');\n      setTimeout(() => {\n        userWarningNull.current.classList.toggle('d-block');\n      }, 2500);\n    }\n  }; // event submit and get data of the user for the login\n\n\n  const handleSubmit = e => {\n    e.preventDefault(); // get for parameter the data of the form login for your verification\n\n    userSessionStart(user, pdw);\n  }; // handler value input username\n\n\n  const handleChangeUsername = e => {\n    setUser(e.target.value);\n  };\n\n  const handleChangeFullname = e => {\n    setFullname(e.target.value);\n  };\n\n  const handleChangeLocation = e => {\n    setLocation(e.target.value);\n  };\n\n  const handleChangePdw = e => {\n    setPdw(e.target.value);\n  };\n\n  const handleChangeEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  return __jsx(\"article\", {\n    className: \"content-frm-login col-10 col-sm-10 col-lg-4 col-xl-4 m-auto\"\n  }, __jsx(\"h1\", {\n    className: \"title-register\"\n  }, \"Reg\\xEDstrate ahora\"), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    id: \"frm-login\"\n  }, __jsx(\"p\", {\n    ref: userSuccess,\n    className: \"user-warning d-none bg-success p-2\"\n  }, \"Se ha creado exitosamente!\"), __jsx(\"p\", {\n    ref: userWarning,\n    className: \"user-warning d-none bg-secondary p-2\"\n  }, \"Este usuario ya existe\"), __jsx(\"p\", {\n    ref: userWarningNull,\n    className: \"user-warning d-none bg-secondary p-2\"\n  }, \"Los datos est\\xE1n incompletos\"), __jsx(\"input\", {\n    onChange: handleChangeFullname,\n    type: \"text\",\n    name: \"fullname\",\n    placeholder: \"Nombre completo\"\n  }), __jsx(\"input\", {\n    onChange: handleChangeUsername,\n    type: \"text\",\n    name: \"user\",\n    placeholder: \"Nombre de usuario\"\n  }), __jsx(\"input\", {\n    onChange: handleChangeEmail,\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Correo electr\\xF3nico\"\n  }), location && __jsx(\"select\", {\n    onChange: handleChangeLocation,\n    name: \"location\"\n  }, geoData ? geoData.map(location => __jsx(\"option\", {\n    key: location.id\n  }, location.nombre)) : __jsx(\"option\", null, \"No hay provincias\")), __jsx(\"article\", {\n    className: \"col-12 p-0\"\n  }, __jsx(\"input\", {\n    onChange: handleChangePdw,\n    type: viewPdw,\n    name: \"pdw\",\n    placeholder: \"Contrase\\xF1a\"\n  }), __jsx(\"button\", {\n    onClick: handlePdwView,\n    type: \"button\",\n    className: \"btn-switch-pdw\"\n  }, __jsx(\"svg\", {\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 16 16\",\n    className: `bi bi-eye-slash ${viewPdwClose}`,\n    fill: \"currentColor\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, __jsx(\"path\", {\n    d: \"M13.359 11.238C15.06 9.72 16 8 16 8s-3-5.5-8-5.5a7.028 7.028 0 0 0-2.79.588l.77.771A5.944 5.944 0 0 1 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.134 13.134 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755-.165.165-.337.328-.517.486l.708.709z\"\n  }), __jsx(\"path\", {\n    d: \"M11.297 9.176a3.5 3.5 0 0 0-4.474-4.474l.823.823a2.5 2.5 0 0 1 2.829 2.829l.822.822zm-2.943 1.299l.822.822a3.5 3.5 0 0 1-4.474-4.474l.823.823a2.5 2.5 0 0 0 2.829 2.829z\"\n  }), __jsx(\"path\", {\n    d: \"M3.35 5.47c-.18.16-.353.322-.518.487A13.134 13.134 0 0 0 1.172 8l.195.288c.335.48.83 1.12 1.465 1.755C4.121 11.332 5.881 12.5 8 12.5c.716 0 1.39-.133 2.02-.36l.77.772A7.029 7.029 0 0 1 8 13.5C3 13.5 0 8 0 8s.939-1.721 2.641-3.238l.708.709z\"\n  }), __jsx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M13.646 14.354l-12-12 .708-.708 12 12-.708.708z\"\n  })), __jsx(\"svg\", {\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 16 16\",\n    className: `bi bi-eye ${viewPdwOpen}`,\n    fill: \"currentColor\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, __jsx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.134 13.134 0 0 0 1.66 2.043C4.12 11.332 5.88 12.5 8 12.5c2.12 0 3.879-1.168 5.168-2.457A13.134 13.134 0 0 0 14.828 8a13.133 13.133 0 0 0-1.66-2.043C11.879 4.668 10.119 3.5 8 3.5c-2.12 0-3.879 1.168-5.168 2.457A13.133 13.133 0 0 0 1.172 8z\"\n  }), __jsx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z\"\n  })))), __jsx(\"input\", {\n    className: \"btn\",\n    type: \"submit\",\n    value: \"Registrarme\"\n  }), __jsx(Link, {\n    href: \"/iniciar-sesion\",\n    as: \"/iniciar-sesion\"\n  }, __jsx(\"a\", null, \"Iniciar sesi\\xF3n\"))));\n};\n\nexport default Register;","map":null,"metadata":{},"sourceType":"module"}