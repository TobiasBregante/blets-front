{"ast":null,"code":"var _jsxFileName = \"/home/naza/Escritorio/marketblets/front-end/components/product/product.all.component.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport CurrencyFormat from 'react-currency-format';\n\nconst ProductAll = prop => {\n  const Router = useRouter();\n  const {\n    categoria\n  } = Router.query;\n  const {\n    0: product,\n    1: setProduct\n  } = useState([]);\n  const {\n    0: productExist,\n    1: setProductExist\n  } = useState('false');\n  useEffect(() => {\n    const getAllProduct = async () => {\n      const fetchAll = await fetch(`${process.env.API_PATH}/v1/product/category/${categoria}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      const dataFetch = await fetchAll.json();\n      setProduct(dataFetch);\n    };\n\n    getAllProduct();\n    product.length > 0 ? setProductExist('true') : setProductExist('false');\n  }, [prop]);\n  return __jsx(React.Fragment, null, product && product.length > 0 ? product.map((prod, i) => __jsx(Link, {\n    key: i,\n    href: \"/[name]/[id]\",\n    as: `${prod.title}/${prod._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    className: \"card-product-all card col-12 col-sm-12 col-lg-12 col-xl-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, __jsx(\"article\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, __jsx(\"img\", {\n    src: prod.img,\n    alt: prod.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }\n  }), __jsx(\"p\", {\n    className: \"card-title d-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }\n  }, prod.title), __jsx(\"p\", {\n    className: \"card-price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  }, prod.amount !== 0 ? __jsx(CurrencyFormat, {\n    value: prod.amount,\n    displayType: 'text',\n    thousandSeparator: true,\n    prefix: '$',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 31\n    }\n  }) : __jsx(\"span\", {\n    className: \"text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 31\n    }\n  }, \"GRATIS\")), __jsx(\"p\", {\n    className: \"d-inline card-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, prod.description))))) : __jsx(\"h3\", {\n    className: \"p-2 m-auto not-products-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 18\n    }\n  }, \"No hay art\\xEDculos disponibles\"));\n};\n\nexport default ProductAll;","map":{"version":3,"sources":["/home/naza/Escritorio/marketblets/front-end/components/product/product.all.component.jsx"],"names":["Link","useRouter","useState","useEffect","CurrencyFormat","ProductAll","prop","Router","categoria","query","product","setProduct","productExist","setProductExist","getAllProduct","fetchAll","fetch","process","env","API_PATH","headers","dataFetch","json","length","map","prod","i","title","_id","img","amount","description"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport CurrencyFormat from 'react-currency-format';\n\nconst ProductAll = prop => {\n    const Router = useRouter();\n    const { categoria } = Router.query;\n    const [product, setProduct] = useState([]);\n    const [productExist, setProductExist] = useState('false');\n    useEffect(() => {\n        const getAllProduct = async () => {\n            const fetchAll = await fetch(`${process.env.API_PATH}/v1/product/category/${categoria}`, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*',\n                }\n            })\n            const dataFetch = await fetchAll.json();\n\n            setProduct(dataFetch);\n        }\n        getAllProduct()\n        product.length > 0 ? setProductExist('true') : setProductExist('false');\n    }, [prop])\n    \n    \n    return(\n        <>\n        {\n             product && product.length > 0 ? product.map((prod, i) => (\n                <Link key={i} href=\"/[name]/[id]\" as={`${prod.title}/${prod._id}`}>\n                    <a className=\"card-product-all card col-12 col-sm-12 col-lg-12 col-xl-12\">\n                        <article className=\"card-body\">\n                            <img src={prod.img} alt={prod.title}/>\n                            <p className=\"card-title d-inline\">{prod.title}</p>\n                            <p className=\"card-price\">\n                            {(prod.amount !== 0) \n                            ? <CurrencyFormat value={prod.amount} displayType={'text'} thousandSeparator={true} prefix={'$'}/>\n                            : <span className='text-success'>GRATIS</span>}\n                            </p>\n                            <p className=\"d-inline card-description\">\n                                {prod.description}\n                            </p>\n                        </article>\n                    </a>\n                </Link>\n            )) : <h3 className='p-2 m-auto not-products-title'>No hay art√≠culos disponibles</h3>\n        }\n        </>\n    )\n}\n\nexport default ProductAll;"]},"metadata":{},"sourceType":"module"}