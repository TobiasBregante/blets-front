{"ast":null,"code":"var _jsxFileName = \"/home/naza/Escritorio/private/marketblets/front-end/components/management/sell/sells.pending.component.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useCookies } from 'react-cookie';\nimport ColSell from './col.sells.pending.component';\nimport axios from 'axios';\n\nconst SellsPending = ({\n  dateFilter\n}) => {\n  const {\n    0: transactionFind,\n    1: setTransactionFind\n  } = useState([]);\n  const [cookies, setCookies] = useCookies(['user']);\n  const Router = useRouter();\n\n  const handlerFetch = async () => {\n    const getFetch = await axios.get(`${process.env.API_PATH}/v1/product/transaction/sells`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'date_filter': dateFilter\n      }\n    });\n    const resFetch = await getFetch.data;\n    console.log(resFetch);\n    setTransactionFind(resFetch);\n  };\n\n  useEffect(() => {\n    if (cookies.user && cookies.user.rol !== 'seller') {\n      Router.push('/');\n    } else if (!cookies.user) {\n      Router.push('/');\n    }\n\n    handlerFetch();\n  }, [dateFilter]);\n  return __jsx(React.Fragment, null, transactionFind.status == 200 && transactionFind.transaction.length > 0 ? transactionFind.transaction.map((data, i) => __jsx(ColSell, {\n    transaction: data,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  })) : __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, \"No hay transacciones disponibles\"));\n};\n\nexport default SellsPending;","map":{"version":3,"sources":["/home/naza/Escritorio/private/marketblets/front-end/components/management/sell/sells.pending.component.jsx"],"names":["useRouter","useState","useEffect","useCookies","ColSell","axios","SellsPending","dateFilter","transactionFind","setTransactionFind","cookies","setCookies","Router","handlerFetch","getFetch","get","process","env","API_PATH","headers","resFetch","data","console","log","user","rol","push","status","transaction","length","map","i"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACrC,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAwCR,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBR,UAAU,CAAC,CAAC,MAAD,CAAD,CAAxC;AACA,QAAMS,MAAM,GAAGZ,SAAS,EAAxB;;AAEA,QAAMa,YAAY,GAAG,YAAY;AAC7B,UAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,QAAS,+BAAlC,EACvB;AACIC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,uCAA+B,GAF1B;AAGL,uBAAeZ;AAHV;AADb,KADuB,CAAvB;AAQA,UAAMa,QAAQ,GAAG,MAAMN,QAAQ,CAACO,IAAhC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAX,IAAAA,kBAAkB,CAACW,QAAD,CAAlB;AACH,GAZD;;AAcAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGQ,OAAO,CAACc,IAAR,IACId,OAAO,CAACc,IAAR,CAAaC,GAAb,KAAqB,QAD5B,EACqC;AACjCb,MAAAA,MAAM,CAACc,IAAP,CAAY,GAAZ;AACH,KAHD,MAGM,IAAG,CAAChB,OAAO,CAACc,IAAZ,EAAiB;AACnBZ,MAAAA,MAAM,CAACc,IAAP,CAAY,GAAZ;AACH;;AACDb,IAAAA,YAAY;AACf,GARQ,EAQN,CAACN,UAAD,CARM,CAAT;AASA,SACI,4BAEIC,eAAe,CAACmB,MAAhB,IAA0B,GAA1B,IACGnB,eAAe,CAACoB,WAAhB,CAA4BC,MAA5B,GAAqC,CADxC,GAEErB,eAAe,CAACoB,WAAhB,CAA4BE,GAA5B,CAAgC,CAACT,IAAD,EAAOU,CAAP,KAC9B,MAAC,OAAD;AAAS,IAAA,WAAW,EAAEV,IAAtB;AAA4B,IAAA,GAAG,EAAEU,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,GAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAPN,CADJ;AAYH,CAxCD;;AA0CA,eAAezB,YAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useCookies } from 'react-cookie';\nimport ColSell from './col.sells.pending.component';\nimport axios from 'axios';\n\nconst SellsPending = ({ dateFilter }) => {\n    const [transactionFind, setTransactionFind] = useState([]);\n    const [cookies, setCookies] = useCookies(['user']);\n    const Router = useRouter();\n    \n    const handlerFetch = async () => {\n        const getFetch = await axios.get(`${process.env.API_PATH}/v1/product/transaction/sells`, \n        {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': '*',\n                'date_filter': dateFilter\n            }\n        });\n        const resFetch = await getFetch.data;\n        console.log(resFetch)\n        setTransactionFind(resFetch);\n    }\n    \n    useEffect(() => {\n        if(cookies.user \n            && cookies.user.rol !== 'seller'){\n            Router.push('/')\n        }else if(!cookies.user){\n            Router.push('/')\n        }\n        handlerFetch();\n    }, [dateFilter])\n    return(\n        <>\n        {\n            transactionFind.status == 200 \n            && transactionFind.transaction.length > 0\n            ? transactionFind.transaction.map((data, i) => (\n                <ColSell transaction={data} key={i}/>\n            )) \n            : <p>No hay transacciones disponibles</p> \n        }\n        </>\n    )\n}\n\nexport default SellsPending;"]},"metadata":{},"sourceType":"module"}