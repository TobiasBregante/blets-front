{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/naza/Escritorio/marketblets/front-end/components/management/show.metrics.component.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nvar ShowMetrics = function ShowMetrics(prop) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  useEffect(_s(function () {\n    _s();\n\n    var _useState = useState([]),\n        transactionMetrics = _useState[0],\n        setTransactionMetrics = _useState[1];\n\n    var handlerFetchMetrics = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var getFetchMetrics, resFetchMetrics;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('http://localhost:4000/v1/product/transaction/sells/metrics', {\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*'\n                  }\n                });\n\n              case 2:\n                getFetchMetrics = _context.sent;\n                _context.next = 5;\n                return getFetchMetrics.json();\n\n              case 5:\n                resFetchMetrics = _context.sent;\n                setTransactionMetrics(resFetchMetrics);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function handlerFetchMetrics() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    handlerFetchMetrics();\n  }, \"YMUWQXzWW5PYEcpMKy0WJ0nTNj8=\"), [prop]);\n  return __jsx(React.Fragment, null, __jsx(\"article\", {\n    className: \"content-metrics-header-mybusiness col-12 col-sm-12 col-lg-12 col-xl-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, \"Ventas: \", __jsx(\"span\", {\n    className: \"text-primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 29\n    }\n  }, transactionMetrics.success)), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"Registros: \", __jsx(\"span\", {\n    className: \"text-secondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 32\n    }\n  }, \"4.500\")), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"Consultas: \", __jsx(\"span\", {\n    className: \"text-primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 32\n    }\n  }, \"134.000\")), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Referidos: \", __jsx(\"span\", {\n    className: \"text-secondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 32\n    }\n  }, \"15.000\")), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"Productos y servicios: \", __jsx(\"span\", {\n    className: \"text-primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 44\n    }\n  }, \"545.000\")), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"Influencers: \", __jsx(\"span\", {\n    className: \"text-secondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 34\n    }\n  }, \"250\")))));\n};\n\n_s2(ShowMetrics, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ShowMetrics;\nexport default ShowMetrics;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowMetrics\");","map":{"version":3,"sources":["/home/naza/Escritorio/marketblets/front-end/components/management/show.metrics.component.jsx"],"names":["useState","useEffect","ShowMetrics","prop","transactionMetrics","setTransactionMetrics","handlerFetchMetrics","fetch","headers","getFetchMetrics","json","resFetchMetrics","success"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI,EAAI;AAAA;;AAAA;;AACxBF,EAAAA,SAAS,IAAC,YAAM;AAAA;;AAAA,oBACwCD,QAAQ,CAAC,EAAD,CADhD;AAAA,QACLI,kBADK;AAAA,QACeC,qBADf;;AAEZ,QAAMC,mBAAmB;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEMC,KAAK,CAAC,4DAAD,EAA+D;AAC9FC,kBAAAA,OAAO,EAAE;AACL,oCAAgB,kBADX;AAEL,mDAA+B;AAF1B;AADqF,iBAA/D,CAFX;;AAAA;AAElBC,gBAAAA,eAFkB;AAAA;AAAA,uBAQMA,eAAe,CAACC,IAAhB,EARN;;AAAA;AAQlBC,gBAAAA,eARkB;AASxBN,gBAAAA,qBAAqB,CAACM,eAAD,CAArB;;AATwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAnBL,mBAAmB;AAAA;AAAA;AAAA,OAAzB;;AAWAA,IAAAA,mBAAmB;AACtB,GAdQ,mCAcN,CAACH,IAAD,CAdM,CAAT;AAeA,SACI,4BACA;AAAS,IAAA,SAAS,EAAC,wEAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACY;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCC,kBAAkB,CAACQ,OAAnD,CADZ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACe;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADf,CAJJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACe;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADf,CAPJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACe;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADf,CAVJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAC2B;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAD3B,CAbJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACiB;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADjB,CAhBJ,CADJ,CADA,CADJ;AA0BH,CA1CD;;IAAMV,W;;KAAAA,W;AA4CN,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nconst ShowMetrics = prop => {\r\n    useEffect(() => {\r\n        const [transactionMetrics, setTransactionMetrics] = useState([]);\r\n        const handlerFetchMetrics = async () => {\r\n            // fetch metrics\r\n            const getFetchMetrics = await fetch('http://localhost:4000/v1/product/transaction/sells/metrics', {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*'\r\n                }\r\n            });\r\n            const resFetchMetrics = await getFetchMetrics.json();\r\n            setTransactionMetrics(resFetchMetrics);\r\n        }\r\n        handlerFetchMetrics();\r\n    }, [prop]);\r\n    return(\r\n        <>\r\n        <article className=\"content-metrics-header-mybusiness col-12 col-sm-12 col-lg-12 col-xl-12\">\r\n            <ul>\r\n                <li>\r\n                    Ventas: <span className='text-primary'>{transactionMetrics.success}</span>\r\n                </li>\r\n                <li>\r\n                    Registros: <span className='text-secondary'>4.500</span>\r\n                </li>\r\n                <li>\r\n                    Consultas: <span className='text-primary'>134.000</span>\r\n                </li>\r\n                <li>\r\n                    Referidos: <span className='text-secondary'>15.000</span>\r\n                </li>\r\n                <li>\r\n                    Productos y servicios: <span className='text-primary'>545.000</span>\r\n                </li>\r\n                <li>\r\n                    Influencers: <span className='text-secondary'>250</span>\r\n                </li>\r\n            </ul>    \r\n        </article>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ShowMetrics;"]},"metadata":{},"sourceType":"module"}