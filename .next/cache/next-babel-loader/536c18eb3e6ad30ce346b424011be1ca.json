{"ast":null,"code":"var _jsxFileName = \"/home/naza/Escritorio/marketblets/front-end/components/management/sell/sells.pending.component.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useCookies } from 'react-cookie';\n\nconst SellsPending = e => {\n  const {\n    0: transactionFind,\n    1: setTransactionFind\n  } = useState([]);\n  const [cookies, setCookies] = useCookies(['user']);\n  useEffect(() => {\n    const handlerFetch = async () => {\n      const getFetch = await fetch('http://localhost:4000/v1/product/transaction/sells', {\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      const resFetch = await getFetch.json();\n      setTransactionFind(resFetch);\n    };\n\n    handlerFetch();\n  }, [e]);\n  return __jsx(React.Fragment, null, transactionFind ? transactionFind.transaction.map((data, i) => __jsx(\"article\", {\n    keu: i,\n    className: \"col-12 col-sm-12 col-lg-12 col-xl-12 col-sells\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }, \"Cliente: \", __jsx(\"span\", {\n    className: \"text-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 38\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 66\n    }\n  }, data.id_client))), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, \"Canal: \", __jsx(\"span\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 36\n    }\n  }, \" \", __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 68\n    }\n  }, data.token_influencer))), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, \"Precio: \", __jsx(\"span\", {\n    className: \"text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 37\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 68\n    }\n  }, \"$23,000\"))), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    type: \"button\",\n    value: \"Acreditado\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }\n  }), __jsx(\"input\", {\n    type: \"button\",\n    value: \"Rechazado\",\n    className: \"btn btn-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }\n  }))))) : __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 18\n    }\n  }, \"No hay transacciones disponibles\"));\n};\n\nexport default SellsPending;","map":{"version":3,"sources":["/home/naza/Escritorio/marketblets/front-end/components/management/sell/sells.pending.component.jsx"],"names":["useState","useEffect","useCookies","SellsPending","e","transactionFind","setTransactionFind","cookies","setCookies","handlerFetch","getFetch","fetch","headers","resFetch","json","transaction","map","data","i","id_client","token_influencer"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,MAAMC,YAAY,GAAGC,CAAC,IAAI;AACtB,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAwCN,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBN,UAAU,CAAC,CAAC,MAAD,CAAD,CAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,YAAY,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oDAAD,EAAuD;AAC/EC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,yCAA+B;AAF1B;AADsE,OAAvD,CAA5B;AAMA,YAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAvB;AACAR,MAAAA,kBAAkB,CAACO,QAAD,CAAlB;AACH,KATD;;AAUAJ,IAAAA,YAAY;AACf,GAZQ,EAYN,CAACL,CAAD,CAZM,CAAT;AAaA,SACI,4BAEIC,eAAe,GACbA,eAAe,CAACU,WAAhB,CAA4BC,GAA5B,CAAgC,CAACC,IAAD,EAAOC,CAAP,KAC9B;AAAS,IAAA,GAAG,EAAEA,CAAd;AAAiB,IAAA,SAAS,EAAC,gDAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAa;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASD,IAAI,CAACE,SAAd,CAA5B,CAAb,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAW;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASF,IAAI,CAACG,gBAAd,CAAhC,CAAX,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAY;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA/B,CAAZ,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,YAA3B;AAAwC,IAAA,SAAS,EAAC,iBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,WAA3B;AAAuC,IAAA,SAAS,EAAC,iBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAJJ,CADJ,CADF,CADa,GAaV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAfT,CADJ;AAoBH,CApCD;;AAsCA,eAAejB,YAAf","sourcesContent":["import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useCookies } from 'react-cookie';\n\nconst SellsPending = e => {\n    const [transactionFind, setTransactionFind] = useState([]);\n    const [cookies, setCookies] = useCookies(['user']);\n    useEffect(() => {\n        const handlerFetch = async () => {\n            const getFetch = await fetch('http://localhost:4000/v1/product/transaction/sells', {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*'\n                }\n            });\n            const resFetch = await getFetch.json();\n            setTransactionFind(resFetch);\n        }\n        handlerFetch();\n    }, [e])\n    return(\n        <>\n        {\n            transactionFind \n            ? transactionFind.transaction.map((data, i) => (\n                <article keu={i} className='col-12 col-sm-12 col-lg-12 col-xl-12 col-sells'>\n                    <ul>\n                        <li>Cliente: <span className='text-dark'><strong>{data.id_client}</strong></span></li>\n                        <li>Canal: <span className='text-primary'> <strong>{data.token_influencer}</strong></span></li>\n                        <li>Precio: <span className='text-success'><strong>$23,000</strong></span></li>\n                        <li>\n                            <input type=\"button\" value=\"Acreditado\" className=\"btn btn-primary\"/>\n                            <input type=\"button\" value=\"Rechazado\" className=\"btn btn-warning\"/>\n                        </li>\n                    </ul>\n                </article>\n            )) : <p>No hay transacciones disponibles</p> \n        }\n        </>\n    )\n}\n\nexport default SellsPending;"]},"metadata":{},"sourceType":"module"}