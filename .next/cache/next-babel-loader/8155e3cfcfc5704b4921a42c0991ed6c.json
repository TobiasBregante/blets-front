{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport SellsPending from './sells.pending.component';\n\nvar TransactionsComp = function TransactionsComp(prop) {\n  var _useState = useState([]),\n      transactionMetrics = _useState[0],\n      setTransactionMetrics = _useState[1];\n\n  useEffect(function () {\n    var handlerFetchMetrics = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var getFetchMetrics, resFetchMetrics;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(process.env.API_PATH, \"/v1/product/transaction/sells/metrics\"), {\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*'\n                  }\n                });\n\n              case 2:\n                getFetchMetrics = _context.sent;\n                _context.next = 5;\n                return getFetchMetrics.json();\n\n              case 5:\n                resFetchMetrics = _context.sent;\n                setTransactionMetrics(resFetchMetrics);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function handlerFetchMetrics() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    handlerFetchMetrics();\n  }, [prop]);\n  return __jsx(React.Fragment, null, __jsx(\"article\", {\n    className: \"content-metrics-header-mybusiness col-12 col-sm-12 col-lg-12 col-xl-12\"\n  }, __jsx(\"ul\", null, __jsx(\"li\", null, \"Ventas: \", __jsx(\"span\", {\n    className: \"text-primary\"\n  }, transactionMetrics.success)), __jsx(\"li\", null, \"En proceso: \", __jsx(\"span\", {\n    className: \"text-secondary\"\n  }, transactionMetrics.pending)))), __jsx(\"article\", {\n    className: \"col-12 col-sm-12 col-lg-12 col-xl-12\"\n  }, __jsx(SellsPending, null)));\n};\n\nexport default TransactionsComp;","map":null,"metadata":{},"sourceType":"module"}