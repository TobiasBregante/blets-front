{"ast":null,"code":"var _jsxFileName = \"/home/naza/Escritorio/marketblets/front-end/components/get.token.influencer.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Router } from \"next/router\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nconst InputTokenInfluencer = () => {\n  const {\n    0: tokenValue,\n    1: setTokenValue\n  } = useState('');\n  const {\n    0: btnValueToken,\n    1: setBtnValueToken\n  } = useState('bg-light text-dark');\n  const [cookies, setCookie] = useCookies(['user']);\n  useEffect(() => {\n    if (cookies.user && cookies.user.discount_token) {\n      setBtnValueToken('bg-success text-light');\n    }\n  });\n\n  const handlerInputToken = e => {\n    setTokenValue(e.target.value);\n  };\n\n  const AuthToken = async token_payment => {\n    const fetchToken = await fetch(`${process.env.API_PATH}/v1/influencer/${token_payment}`);\n    const getFetch = await fetchToken.json();\n    return getFetch;\n  };\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n\n    if (cookies.user) {\n      AuthToken(tokenValue).then(success => {\n        console.log(success);\n\n        if (success.token_verify === 1) {\n          setBtnValueToken('bg-success text-light');\n          let userCookieCredentials = cookies.user;\n          userCookieCredentials.discount_token = tokenValue;\n          setCookie('user', userCookieCredentials, {\n            maxAge: 86400\n          });\n        } else {\n          setBtnValueToken('bg-danger text-light');\n        }\n      });\n    } else {\n      Router.push('/iniciar-sesion');\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    className: \"frm-token\",\n    onSubmit: handlerSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    onChange: handlerInputToken,\n    className: `border-0 code-ref-input form-control ${btnValueToken}`,\n    type: \"text\",\n    placeholder: \"#C\\xF3digo de referido\",\n    \"aria-label\": \"#C\\xF3digo de referido\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-search\",\n    value: \"Ir\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default InputTokenInfluencer;","map":{"version":3,"sources":["/home/naza/Escritorio/marketblets/front-end/components/get.token.influencer.jsx"],"names":["Router","useEffect","useState","useCookies","InputTokenInfluencer","tokenValue","setTokenValue","btnValueToken","setBtnValueToken","cookies","setCookie","user","discount_token","handlerInputToken","e","target","value","AuthToken","token_payment","fetchToken","fetch","process","env","API_PATH","getFetch","json","handlerSubmit","preventDefault","then","success","console","log","token_verify","userCookieCredentials","maxAge","push"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,aAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,MAAMC,oBAAoB,GAAG,MAAM;AAC/B,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAA,OAACK,aAAD;AAAA,OAAgBC;AAAhB,MAAoCN,QAAQ,CAAC,oBAAD,CAAlD;AACA,QAAM,CAACO,OAAD,EAAUC,SAAV,IAAuBP,UAAU,CAAC,CAAC,MAAD,CAAD,CAAvC;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGQ,OAAO,CAACE,IAAR,IAAgBF,OAAO,CAACE,IAAR,CAAaC,cAAhC,EAA+C;AAC3CJ,MAAAA,gBAAgB,CAAC,uBAAD,CAAhB;AACH;AACJ,GAJQ,CAAT;;AAMA,QAAMK,iBAAiB,GAAGC,CAAC,IAAI;AAC3BR,IAAAA,aAAa,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACH,GAFD;;AAGA,QAAMC,SAAS,GAAG,MAAMC,aAAN,IAAuB;AACrC,UAAMC,UAAU,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,QAAS,kBAAiBL,aAAc,EAAxD,CAA9B;AACA,UAAMM,QAAQ,GAAG,MAAML,UAAU,CAACM,IAAX,EAAvB;AACA,WAAOD,QAAP;AACH,GAJD;;AAKA,QAAME,aAAa,GAAGZ,CAAC,IAAI;AACvBA,IAAAA,CAAC,CAACa,cAAF;;AACA,QAAGlB,OAAO,CAACE,IAAX,EAAgB;AACZM,MAAAA,SAAS,CAACZ,UAAD,CAAT,CACCuB,IADD,CACMC,OAAO,IAAI;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AACA,YAAGA,OAAO,CAACG,YAAR,KAAyB,CAA5B,EAA8B;AAC1BxB,UAAAA,gBAAgB,CAAC,uBAAD,CAAhB;AACA,cAAIyB,qBAAqB,GAAGxB,OAAO,CAACE,IAApC;AACAsB,UAAAA,qBAAqB,CAACrB,cAAtB,GAAuCP,UAAvC;AACAK,UAAAA,SAAS,CAAC,MAAD,EAASuB,qBAAT,EAAgC;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAAhC,CAAT;AACH,SALD,MAKK;AACD1B,UAAAA,gBAAgB,CAAC,sBAAD,CAAhB;AACH;AACJ,OAXD;AAYH,KAbD,MAaK;AACDR,MAAAA,MAAM,CAACmC,IAAP,CAAY,iBAAZ;AACH;AACJ,GAlBD;;AAmBA,SACI,4BACA;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,QAAQ,EAAET,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,QAAQ,EAAEb,iBAAjB;AAAoC,IAAA,SAAS,EAAG,wCAAuCN,aAAc,EAArG;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,wBAFhB;AAGI,kBAAW,wBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAC,gBAA/B;AAAgD,IAAA,KAAK,EAAC,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADA,CADJ;AAWH,CAhDD;;AAkDA,eAAeH,oBAAf","sourcesContent":["import { Router } from \"next/router\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nconst InputTokenInfluencer = () => {\n    const [tokenValue, setTokenValue] = useState('');\n    const [btnValueToken, setBtnValueToken] = useState('bg-light text-dark');\n    const [cookies, setCookie] = useCookies(['user']);\n    useEffect(() => {\n        if(cookies.user && cookies.user.discount_token){\n            setBtnValueToken('bg-success text-light')\n        }\n    })\n\n    const handlerInputToken = e => {\n        setTokenValue(e.target.value);\n    }\n    const AuthToken = async token_payment => {\n        const fetchToken = await fetch(`${process.env.API_PATH}/v1/influencer/${token_payment}`);\n        const getFetch = await fetchToken.json();\n        return getFetch;\n    }\n    const handlerSubmit = e => {\n        e.preventDefault()\n        if(cookies.user){\n            AuthToken(tokenValue)\n            .then(success => {\n                console.log(success)\n                if(success.token_verify === 1){\n                    setBtnValueToken('bg-success text-light')\n                    let userCookieCredentials = cookies.user;\n                    userCookieCredentials.discount_token = tokenValue;\n                    setCookie('user', userCookieCredentials, { maxAge: 86400 });\n                }else{\n                    setBtnValueToken('bg-danger text-light')\n                }\n            })\n        }else{\n            Router.push('/iniciar-sesion');\n        }\n    }\n    return(\n        <>\n        <form className='frm-token' onSubmit={handlerSubmit}>\n            <input onChange={handlerInputToken} className={`border-0 code-ref-input form-control ${btnValueToken}`} \n                type=\"text\" \n                placeholder='#Código de referido' \n                aria-label=\"#Código de referido\"/>\n            <input type=\"submit\" className='btn btn-search' value='Ir'/>\n        </form>\n        </>\n    )\n}\n\nexport default InputTokenInfluencer;"]},"metadata":{},"sourceType":"module"}