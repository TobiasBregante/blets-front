{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useCookies } from 'react-cookie';\nimport ColSell from './col.sells.pending.component';\nimport OnLoadComponent from '../../onload.component';\nimport axios from 'axios';\n\nvar SellsPending = function SellsPending(_ref) {\n  var dateFilter = _ref.dateFilter;\n\n  var _useState = useState([]),\n      transactionFind = _useState[0],\n      setTransactionFind = _useState[1];\n\n  var _useCookies = useCookies(['user']),\n      _useCookies2 = _slicedToArray(_useCookies, 2),\n      cookies = _useCookies2[0],\n      setCookies = _useCookies2[1];\n\n  var _useState2 = useState(false),\n      onLoadAdd = _useState2[0],\n      setOnLoadAdd = _useState2[1];\n\n  var Router = useRouter();\n\n  var handlerFetch = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var getFetch, resFetch;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setOnLoadAdd(true);\n              _context.next = 3;\n              return axios.get(\"\".concat(process.env.API_PATH, \"/v1/product/transaction/sells\"), {\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Access-Control-Allow-Origin': '*',\n                  'date_filter': dateFilter\n                }\n              });\n\n            case 3:\n              getFetch = _context.sent;\n              _context.next = 6;\n              return getFetch.data;\n\n            case 6:\n              resFetch = _context.sent;\n              _context.next = 9;\n              return resFetch;\n\n            case 9:\n              _context.t1 = _context.sent;\n\n              if (!_context.t1) {\n                _context.next = 12;\n                break;\n              }\n\n              _context.t1 = resFetch.status;\n\n            case 12:\n              _context.t0 = _context.t1;\n\n              if (!_context.t0) {\n                _context.next = 15;\n                break;\n              }\n\n              _context.t0 = dateFilter;\n\n            case 15:\n              _context.t2 = _context.t0;\n\n              if (!_context.t2) {\n                _context.next = 18;\n                break;\n              }\n\n              setOnLoadAdd(false);\n\n            case 18:\n              setTransactionFind(resFetch);\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handlerFetch() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (cookies.user && cookies.user.rol !== 'seller') {\n      Router.push('/');\n    } else if (!cookies.user) {\n      Router.push('/');\n    }\n\n    handlerFetch();\n  }, [dateFilter]);\n  return __jsx(React.Fragment, null, transactionFind.status == 200 && transactionFind.transaction.length > 0 ? transactionFind.transaction.map(function (data, i) {\n    return __jsx(ColSell, {\n      transaction: data,\n      key: i\n    });\n  }) : __jsx(\"p\", null, \"No hay transacciones disponibles\"), __jsx(OnLoadComponent.OnloadArticlesComponent, {\n    status: onLoadAdd\n  }));\n};\n\nexport default SellsPending;","map":null,"metadata":{},"sourceType":"module"}