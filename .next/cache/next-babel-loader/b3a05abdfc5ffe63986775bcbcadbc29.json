{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useCookies } from 'react-cookie';\nimport ColSell from './col.sells.pending.component';\n\nconst SellsPending = e => {\n  const {\n    0: transactionFind,\n    1: setTransactionFind\n  } = useState([]);\n  const [cookies, setCookies] = useCookies(['user']);\n  const Router = useRouter();\n  useEffect(() => {\n    if (cookies.user && cookies.user.rol !== 'seller') {\n      Router.push('/');\n    } else if (!cookies.user) {\n      Router.push('/');\n    }\n\n    const handlerFetch = async () => {\n      const getFetch = await fetch(`${process.env.API_PATH}/v1/product/transaction/sells`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      const resFetch = await getFetch.json();\n      setTransactionFind(resFetch);\n    };\n\n    handlerFetch();\n  }, [e]);\n  return __jsx(React.Fragment, null, transactionFind.status == 200 ? transactionFind.transaction.map((data, i) => __jsx(ColSell, {\n    key: i,\n    idProduct: data.id_product,\n    dataOrder: data\n  })) : __jsx(\"p\", null, \"No hay transacciones disponibles\"));\n};\n\nexport default SellsPending;","map":null,"metadata":{},"sourceType":"module"}