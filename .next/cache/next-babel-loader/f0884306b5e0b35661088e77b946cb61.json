{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/naza/Escritorio/marketblets/front-end/components/product/product.all.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport CurrencyFormat from 'react-currency-format';\nimport { Image, Video, Transformation, CloudinaryContext } from 'cloudinary-react';\nimport { useRef } from 'react';\n\nvar ProductAll = function ProductAll(prop) {\n  _s();\n\n  var imgContent = useRef(null);\n\n  var _useState = useState(''),\n      imgContentState = _useState[0],\n      setImgContentState = _useState[1];\n\n  var Router = useRouter();\n  var categoria = Router.query.categoria;\n\n  var _useState2 = useState([]),\n      product = _useState2[0],\n      setProduct = _useState2[1];\n\n  useEffect(function () {\n    var getAllProduct = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var fetchAll, dataFetch;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(process.env.API_PATH, \"/v1/product/category/\").concat(categoria), {\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*'\n                  }\n                });\n\n              case 2:\n                fetchAll = _context.sent;\n                _context.next = 5;\n                return fetchAll.json();\n\n              case 5:\n                dataFetch = _context.sent;\n                setProduct(dataFetch);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getAllProduct() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getAllProduct();\n  }, [prop]);\n  useEffect(function () {\n    return setImgContentState(imgContent.current.offsetWidth);\n  }, null);\n  return __jsx(React.Fragment, null, product && product.length > 0 ? product.map(function (prod, i) {\n    return __jsx(Link, {\n      key: i,\n      href: \"/[name]/[id]\",\n      as: \"/\".concat(prod.title, \"/\").concat(prod._id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, __jsx(\"a\", {\n      className: \"card-product-all card col-12 col-sm-12 col-lg-12 col-xl-12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, __jsx(\"article\", {\n      className: \"card-body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }\n    }, __jsx(\"article\", {\n      className: \"img-title-payment-product-all\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }\n    }, __jsx(\"article\", {\n      className: \"img-product-all\",\n      ref: imgContent,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 33\n      }\n    }, __jsx(CloudinaryContext, {\n      className: \"col-12\",\n      cloudName: \"blets\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 37\n      }\n    }, __jsx(Image, {\n      width: imgContentState,\n      cloudName: \"blets\",\n      publicId: prod.img,\n      alt: prod.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 41\n      }\n    }))), __jsx(\"p\", {\n      className: \"card-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }\n    }, prod.title), __jsx(\"p\", {\n      className: \"card-price\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }\n    }, prod.amount !== 0 ? __jsx(CurrencyFormat, {\n      value: prod.amount,\n      displayType: 'text',\n      thousandSeparator: true,\n      prefix: '$',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 39\n      }\n    }) : __jsx(\"span\", {\n      className: \"text-success\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 39\n      }\n    }, \"GRATIS\"))), __jsx(\"article\", {\n      className: \"description-product-all\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }, __jsx(\"p\", {\n      className: \"card-description\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }\n    }, prod.description)))));\n  }) : __jsx(\"h3\", {\n    className: \"p-2 m-auto not-products-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 18\n    }\n  }, \"No hay art\\xEDculos disponibles\"));\n};\n\n_s(ProductAll, \"RrO31uS9Qq4fiEjn6BKOdWWFBBc=\", false, function () {\n  return [useRouter];\n});\n\n_c = ProductAll;\nexport default ProductAll;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductAll\");","map":{"version":3,"sources":["/home/naza/Escritorio/marketblets/front-end/components/product/product.all.component.jsx"],"names":["Link","useRouter","useState","useEffect","CurrencyFormat","Image","Video","Transformation","CloudinaryContext","useRef","ProductAll","prop","imgContent","imgContentState","setImgContentState","Router","categoria","query","product","setProduct","getAllProduct","fetch","process","env","API_PATH","headers","fetchAll","json","dataFetch","current","offsetWidth","length","map","prod","i","title","_id","img","amount","description"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport CurrencyFormat from 'react-currency-format';\nimport {Image, Video, Transformation, CloudinaryContext} from 'cloudinary-react';\nimport { useRef } from 'react';\n\nconst ProductAll = prop => {\n    const imgContent = useRef(null)\n    const [imgContentState, setImgContentState] = useState('')\n    const Router = useRouter();\n    const { categoria } = Router.query;\n    const [product, setProduct] = useState([]);\n    useEffect(() => {\n        const getAllProduct = async () => {\n            const fetchAll = await fetch(`${process.env.API_PATH}/v1/product/category/${categoria}`, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*',\n                }\n            })\n            const dataFetch = await fetchAll.json();\n            setProduct(dataFetch);\n        }\n        getAllProduct()\n    }, [prop])\n    useEffect(() => setImgContentState(imgContent.current.offsetWidth), null)\n    \n    \n    return(\n        <>\n        {\n             product && product.length > 0 ? product.map((prod, i) => (\n                <Link key={i} href=\"/[name]/[id]\" as={`/${prod.title}/${prod._id}`}>\n                    <a className=\"card-product-all card col-12 col-sm-12 col-lg-12 col-xl-12\">\n                        <article className=\"card-body\">\n                            <article className='img-title-payment-product-all'>\n                                <article className='img-product-all' ref={imgContent}>\n                                    <CloudinaryContext className='col-12' cloudName=\"blets\">\n                                        <Image width={imgContentState} cloudName=\"blets\" publicId={prod.img} alt={prod.title}/>\n                                    </CloudinaryContext>\n                                </article>\n                                <p className=\"card-title\">{prod.title}</p>\n                                <p className=\"card-price\">\n                                    {(prod.amount !== 0) \n                                    ? <CurrencyFormat value={prod.amount} displayType={'text'} thousandSeparator={true} prefix={'$'}/>\n                                    : <span className='text-success'>GRATIS</span>}\n                                </p>\n                            </article>\n                            <article className='description-product-all'>\n                                <p className=\"card-description\">\n                                    {prod.description}\n                                </p>\n                            </article>\n                        </article>\n                    </a>\n                </Link>\n            )) : <h3 className='p-2 m-auto not-products-title'>No hay artículos disponibles</h3>\n        }\n        </>\n    )\n}\n\nexport default ProductAll;"]},"metadata":{},"sourceType":"module"}