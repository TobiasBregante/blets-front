{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/naza/Escritorio/marketblets/front-end/components/management/sell/show.metrics.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport SellsPending from './sells.pending.component';\n\nvar TransactionsComp = function TransactionsComp(prop) {\n  _s();\n\n  var _useState = useState([]),\n      transactionMetrics = _useState[0],\n      setTransactionMetrics = _useState[1];\n\n  useEffect(function () {\n    var handlerFetchMetrcis = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var getFetchMetrics, resFetchMetrics;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('http://localhost:4000/v1/product/transaction/sells/metrics', {\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*'\n                  }\n                });\n\n              case 2:\n                getFetchMetrics = _context.sent;\n                _context.next = 5;\n                return getFetchMetrics.json();\n\n              case 5:\n                resFetchMetrics = _context.sent;\n                setTransactionMetrics(resFetchMetrics);\n                console.log(resFetchMetrics);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function handlerFetchMetrcis() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    handlerFetchMetrcis();\n  }, [prop]);\n  return __jsx(React.Fragment, null, __jsx(\"article\", {\n    className: \"content-metrics-header-mybusiness col-12 col-sm-12 col-lg-12 col-xl-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"Ventas: \", __jsx(\"span\", {\n    className: \"text-primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }\n  }, transactionMetrics.success)), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"En proceso: \", __jsx(\"span\", {\n    className: \"text-secondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 33\n    }\n  }, transactionMetrics.pending)))), __jsx(\"article\", {\n    className: \"col-12 col-sm-12 col-lg-12 col-xl-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(SellsPending, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  })));\n};\n\n_s(TransactionsComp, \"Q5AbbKQDewxu9lE0wAQY2B29ID4=\");\n\n_c = TransactionsComp;\nexport default TransactionsComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsComp\");","map":{"version":3,"sources":["/home/naza/Escritorio/marketblets/front-end/components/management/sell/show.metrics.component.jsx"],"names":["useState","useEffect","SellsPending","TransactionsComp","prop","transactionMetrics","setTransactionMetrics","handlerFetchMetrcis","fetch","headers","getFetchMetrics","json","resFetchMetrics","console","log","success","pending"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,IAAI,EAAI;AAAA;;AAAA,kBACuBJ,QAAQ,CAAC,EAAD,CAD/B;AAAA,MACtBK,kBADsB;AAAA,MACFC,qBADE;;AAE7BL,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMM,mBAAmB;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEMC,KAAK,CAAC,4DAAD,EAA+D;AAC9FC,kBAAAA,OAAO,EAAE;AACL,oCAAgB,kBADX;AAEL,mDAA+B;AAF1B;AADqF,iBAA/D,CAFX;;AAAA;AAElBC,gBAAAA,eAFkB;AAAA;AAAA,uBAQMA,eAAe,CAACC,IAAhB,EARN;;AAAA;AAQlBC,gBAAAA,eARkB;AASxBN,gBAAAA,qBAAqB,CAACM,eAAD,CAArB;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;;AAVwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAnBL,mBAAmB;AAAA;AAAA;AAAA,OAAzB;;AAYAA,IAAAA,mBAAmB;AACtB,GAdQ,EAcN,CAACH,IAAD,CAdM,CAAT;AAeA,SACI,4BACA;AAAS,IAAA,SAAS,EAAC,wEAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACY;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCC,kBAAkB,CAACU,OAAnD,CADZ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACgB;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCV,kBAAkB,CAACW,OAArD,CADhB,CAJJ,CADJ,CADA,EAWA;AAAS,IAAA,SAAS,EAAC,sCAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAXA,CADJ;AAiBH,CAlCD;;GAAMb,gB;;KAAAA,gB;AAoCN,eAAeA,gBAAf","sourcesContent":["import { useState } from 'react';\nimport { useEffect } from 'react';\nimport SellsPending from './sells.pending.component';\n\nconst TransactionsComp = prop => {\n    const [transactionMetrics, setTransactionMetrics] = useState([]);\n    useEffect(() => {\n        const handlerFetchMetrcis = async () => {\n            // fetch metrics\n            const getFetchMetrics = await fetch('http://localhost:4000/v1/product/transaction/sells/metrics', {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*'\n                }\n            });\n            const resFetchMetrics = await getFetchMetrics.json();\n            setTransactionMetrics(resFetchMetrics);\n            console.log(resFetchMetrics)\n        }\n        handlerFetchMetrcis();\n    }, [prop]);\n    return(\n        <>\n        <article className=\"content-metrics-header-mybusiness col-12 col-sm-12 col-lg-12 col-xl-12\">\n            <ul>\n                <li>\n                    Ventas: <span className='text-primary'>{transactionMetrics.success}</span>\n                </li>\n                <li>\n                    En proceso: <span className='text-secondary'>{transactionMetrics.pending}</span>\n                </li>\n            </ul>    \n        </article>\n        <article className='col-12 col-sm-12 col-lg-12 col-xl-12'>\n            <SellsPending/>\n        </article>\n        </>\n    )\n}\n\nexport default TransactionsComp;"]},"metadata":{},"sourceType":"module"}