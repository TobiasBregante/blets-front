{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport CurrencyFormat from 'react-currency-format';\nimport { Image, Video, Transformation, CloudinaryContext } from 'cloudinary-react';\nimport { useRef } from 'react';\n\nvar ProductAll = function ProductAll(prop) {\n  var imgContent = useRef(null);\n  var Router = useRouter();\n  var categoria = Router.query.categoria;\n\n  var _useState = useState([]),\n      product = _useState[0],\n      setProduct = _useState[1];\n\n  useEffect(function () {\n    var getAllProduct = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var fetchAll, dataFetch;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(process.env.API_PATH, \"/v1/product/category/\").concat(categoria), {\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*'\n                  }\n                });\n\n              case 2:\n                fetchAll = _context.sent;\n                _context.next = 5;\n                return fetchAll.json();\n\n              case 5:\n                dataFetch = _context.sent;\n                setProduct(dataFetch);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getAllProduct() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getAllProduct();\n  }, [prop]);\n  return __jsx(React.Fragment, null, product && product.length > 0 ? product.map(function (prod, i) {\n    return __jsx(Link, {\n      key: i,\n      href: \"/[name]/[id]\",\n      as: \"/\".concat(prod.title, \"/\").concat(prod._id)\n    }, __jsx(\"a\", {\n      className: \"card-product-all card col-12 col-sm-12 col-lg-12 col-xl-12\"\n    }, __jsx(\"article\", {\n      className: \"card-body\"\n    }, __jsx(\"article\", {\n      className: \"img-title-payment-product-all\"\n    }, __jsx(CloudinaryContext, {\n      cloudName: \"blets\",\n      className: \"img-product-all\",\n      style: {\n        backgroundImage: \"url('http://res.cloudinary.com/blets/image/upload/\".concat(prod.img, \"')\")\n      }\n    }), __jsx(\"p\", {\n      className: \"card-title\"\n    }, prod.title), __jsx(\"p\", {\n      className: \"card-price\"\n    }, prod.amount !== 0 ? __jsx(CurrencyFormat, {\n      value: prod.amount,\n      displayType: 'text',\n      thousandSeparator: true,\n      prefix: '$'\n    }) : __jsx(\"span\", {\n      className: \"text-success\"\n    }, \"GRATIS\"))), __jsx(\"article\", {\n      className: \"description-product-all\"\n    }, __jsx(\"p\", {\n      className: \"card-description\"\n    }, prod.description)))));\n  }) : __jsx(\"h3\", {\n    className: \"p-2 m-auto not-products-title\"\n  }, \"No hay art\\xEDculos disponibles\"));\n};\n\nexport default ProductAll;","map":null,"metadata":{},"sourceType":"module"}